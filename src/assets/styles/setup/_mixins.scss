/* Media queries Breakpoint mixins */

@mixin for-mobile-layout {
  @media (max-width: $break-narrow) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: $break-narrow) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: $break-normal) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: $break-wide) {
    @content;
  }
}

@mixin layoutGTC($max) {
  grid-template-columns:
    minmax($layoutPadding, 1fr)
    minmax(auto, $max)
    minmax($layoutPadding, 1fr);
}

/* Media  Mixins */

//aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
  position: relative;
  overflow: hidden;
  &:before {
    content: '';
    display: block;
    width: 100%;
    padding-top: calc($height / $width) * 100%;
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}

// Buttons

@mixin btn(
  $type: regular,
  $bg: lighten($clr7, 20%),
  $clr: $clr1,
  $padding: em(6px) em(6px),
  $hover: lighten($bg, 25%)
) {
  display: grid;
  place-content: center;
  text-transform: uppercase;
  padding: $padding;
  border-radius: $br;
  line-height: 1rem;
  font-size: em(12px);
  font-variation-settings: 'wght' 430;
  border: none;
  cursor: pointer;

  transition: background-color 0.2s;

  @if $type == regular {
    background-color: $bg;
    color: $clr;
    &:hover {
      background-color: $hover;
    }
  } @else if $type == dark {
    background-color: $clr2;
    color: $clr3;
    &:hover {
      background-color: $clr1;
      color: $clr3;
    }
  } @else if $type == light {
    background-color: $clr1;
    color: $clr7;
    &:hover {
      outline: 1px solid $clr7;
      color: $clr7;
    }
  }
}

@mixin dialog-btn($type: dark) {
  position: fixed;
  right: 1rem;
  top: 1rem;
  @if ($type == dark) {
    i {
      font-size: 2rem;
      color: $clr3;
    }
  }
  @if ($type == light) {
    i {
      font-size: 2rem;
      color: $clr1;
    }
  }
}

// Type
@mixin app-btn($padStartEnd: 5px, $pedInline: 5px, $bgColor: #fdbf2d) {
  font-weight: 600;
  background: $bgColor;
  border: none;
  color: $clr1;
  padding: $padStartEnd $pedInline;
}

@mixin type($type: bold) {
  // type options:
  // 1.bold
  // 2.boldCondensed
  // 3.condensed
  @if $type == bold {
    font-variation-settings: 'wght' 430;
  } @else if $type == boldCondensed {
    font-variation-settings:
      'wght' 430,
      'wdth' 80;
    letter-spacing: em(6.72px);
  } @else if $type == condensed {
    font-variation-settings: 'wdth' 80;
    letter-spacing: em(6.72px);
  } @else if $type == light {
    font-variation-settings: 'wght' 200;
  }
}

@mixin app-input(
  $fw: 200,
  $w: 60%,
  $h: 100%,
  $b: none,
  $p: 0 1rem,
  $fs: 1rem,
  $bgc: lighten($clr4, 8%),
  $br: 0.5rem,
  $fo: none
) {
  font-weight: 200;
  width: $w;
  height: $h;
  border: $b;
  padding: $p;
  font-size: $fs;
  background-color: $bgc;
  border-radius: $br;
  &:focus {
    outline: $fo;
  }
}

@mixin close-modal-btn() {
  position: fixed;
  top: 1em;
  right: 1em;
  background: none;
  border: none;
  &:focus {
    outline: none;
  }
}
